----/Explicação/----

# Binary-Search
•Se a lista tiver ordenada funciona melhor pois ela divide os elementos pela metade e ver o valor se o valor desejado for menor ele ja elimina a metade da dos elementos da lista
•exemplos 
[4,1,6,2,10]
•numero desejado 10
•10 > 6 ou seja ja elimina a metade do começo da lista pois sabe q o 10 é maior que o 6 e faz isso até que encontre o numero

#Interpolation-Search 
•Pode ser melhor quando for maior a quantidade dos dados, por ser mais rapido, ele se destaca quando os dados estao uniformementes distribuidos

#Selection-Sort
•Lista pequena:Pode ser uma boa opção devido à sua simplicidade de implementação. 
•Lista media:O número de comparações cresce quadraticamente com o tamanho da entrada, o que pode levar a um tempo de execução considerável.
•Lista grande:O tempo de execução cresce rapidamente, tornando o algoritmo impraticável para grandes conjuntos de dados.

#Jump-Search 
•Lista pequena: a diferença é quase igual de tempo, tendo vantagens quando o custo de acesso aleatorio da memoria é alta
•Lista grande: binary search é mais rapido pois tem um

#Exponential-Search
•Lista pequena: tem uma dificuldade pois é necessario varias interações
•Lista grande: se a buscar for no inicio ou media ela tera vantegens de velocidade pois consegue se adpatar facilmente com a lista

#Shell-Sort
•com intervalos grandes, elementos distantes são comparados e movidos para posições mais próximas de seus locais finais ajudando a reduzir o número de elementos desordenados

#Radix-Sort
•geralmente usando a base 10 já é o padrão pois usam muito com numeros decimais, fazendo com que os numeros fossem divididos por 10 ate ter o resto e pegar o resultado do resto
•já a base 2 é mais comum para ter resultado com a forma de binario [0,1]


#Merge-Sort
•Ele divide recursivamente a lista a ser ordenada em sublistas menores, ordena essas sublistas e, em seguida, combina as sublistas ordenadas em uma única lista ordenada

#Bucket-Sort
•são preencidos pelo primeiro numero que eles tem no caso de numeros de (0 a 1), eles analisa se o nunero começa com o 0,7 e separa no balde especifico para numeros que são entre 0,6 a 0,8 e fazendo isso recursivamente chegara um momento que os numeros estaram ordenados
