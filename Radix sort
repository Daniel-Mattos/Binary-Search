#include <stdio.h>
#include <stdlib.h>

void radixSort(int arr[], int n) {
    int max = arr[0];
    // Encontrar o maior elemento
    for (int i = 1; i < n; i++)
        if (arr[i] > max)
            max = arr[i];

    // Contar o número de dígitos
    int exp = 1;
    while (max / exp > 0) {
        int buckets[10] = {0};
        int output[n];

        // Contar a ocorrência de cada dígito
        for (int i = 0; i < n; i++)
            buckets[(arr[i] / exp) % 10]++;

        // Calcular os índices de início de cada dígito em output[]
        for (int i = 1; i < 10; i++)
            buckets[i] += buckets[i - 1];

        // Colocar os elementos em seus buckets corretos em output[]
        for (int i = n - 1; i >= 0; i--)
            output[buckets[(arr[i] / exp) % 10]-- - 1] = arr[i];

        // Copiar o resultado de volta para arr[]
        for (int i = 0; i < n; i++)
            arr[i] = output[i];

        exp *= 10;
    }
}

int main() {
    int arr[] = {170, 45, 75, 90, 802, 24, 2, 66};
    int n = sizeof(arr) / sizeof(arr[0]);
    radixSort(arr, n);

    printf("Array ordenado: \n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    return 0;
}
